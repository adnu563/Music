import os
import asyncio
from pyrogram import Client, filters
from pyrogram.types import Message
from AdnanXMusic import app
from AdnanXMusic.utils.database import get_served_chats

# Function to fetch the Logger ID
def get_logger_id():
    return os.environ.get("LOGGER_ID")  # Assuming LOGGER_ID is set as an environment variable

async def lul_message(chat_id: int, message: str):
    await app.send_message(chat_id=chat_id, text=message)

@app.on_message(filters.new_chat_members)
async def on_new_chat_members(client: Client, message: Message):
    if (await client.get_me()).id in [user.id for user in message.new_chat_members]:
        added_by = message.from_user.first_name if message.from_user else "·¥ú…¥·¥ã…¥·¥è·¥°…¥ ·¥ús·¥á Ä"
        chatname = message.chat.title  # Changed matlabi_jhanto to chatname
        served_chats = len(await get_served_chats())
        chat_id = message.chat.id
        if message.chat.username:
            chatusername = f"@{message.chat.username}"
        else:
            chatusername = "·¥© Ä…™·¥†·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä·¥õ"
        lemda_text = f" ô·¥è·¥õ ·¥Ä·¥Ö·¥Ö·¥á·¥Ö ·¥õ·¥è …¥·¥á·¥° …¢ Ä·¥è·¥ú·¥ò..!ü•≥\n\n·¥Ñ ú·¥Ä·¥õ …¥·¥Ä·¥ç·¥á: {chatname}\n·¥Ñ ú·¥Ä·¥õ …™·¥Ö: {chat_id}\n·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á: {chatusername}\n·¥õ·¥è·¥õ·¥Ä ü ·¥Ñ ú·¥Ä·¥õ: {served_chats}\n·¥Ä·¥Ö·¥Ö·¥á·¥Ö  ô è:{added_by}"
        logger_id = get_logger_id()  # Fetch the logger ID
        await lul_message(logger_id, lemda_text)

async def main():
    await app.start()
    await app.idle()

if __name__ == "__main__":
    asyncio.run(main())
